#version 450
layout(local_size_x=16,local_size_y=16)in;
layout(binding = 0,rgba8) uniform writeonly image2D resultImage;
layout(binding=1) uniform UBO{
	float imageWidth;
	float imageHeight;
	float viewportWidth;
	float viewportHeight;
	float focalLength;
}ubo;
void main(){
	vec3 origin = vec3(0,0,0);
	vec3 horizontal = vec3(ubo.viewportWidth,0,0);
	vec3 vertical = vec3(0,ubo.viewportHeight,0);
	vec3 lowerLeftCorner = origin - horizontal/2 - vertical/2-vec3(0,0,ubo.focalLength);
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	vec3 unitDir = normalize(lowerLeftCorner + uv.x * horizontal + uv.y * vertical-origin);
	float t = 0.5 * (unitDir.y+1.0);
	vec3 color = (1.0-t)*vec3(1.0,1.0,1.0)+t*vec3(0.5,0.7,1.0);
	imageStore(resultImage,ivec2(gl_GlobalInvocationID.xy), vec4(color,0.0));
}